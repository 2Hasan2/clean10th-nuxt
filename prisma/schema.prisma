generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// POS system
model Category {
  id String @id @default(uuid())

  name        String  @unique
  description String?

  parentId String?
  parent   Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  children Category[] @relation("CategoryToCategory")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id String @id @default(uuid())

  name        String  @unique
  description String?
  price       Float

  image String?
  upc   String  @unique

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  orderItem orderItem[]

  stock Stock?
}

model Stock {
  id String @id @default(uuid())

  productId String
  product   Product @relation(fields: [productId], references: [id])

  quantity Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productId])
  @@index([productId])
}

enum Role {
  ADMIN
  CASHIER
  ACCOUNTANT
}

model Users {
  id String @id @default(uuid())

  name     String
  email    String @unique
  password String

  role Role @default(CASHIER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// crm
model Customer {
  id String @id @default(uuid())

  name    String  @unique
  email   String? @unique
  phone   String?
  address String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  orders Order[]
}

model Order {
  id String @id @default(uuid())

  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])

  total Float

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  orderItem orderItem[]

  @@index([customerId])
}

model orderItem {
  id String @id @default(uuid())

  orderId String
  order   Order  @relation(fields: [orderId], references: [id])

  productId String
  product   Product @relation(fields: [productId], references: [id])

  quantity Int
  price    Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
